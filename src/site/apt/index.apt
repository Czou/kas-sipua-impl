
Kurento Android SIP User Agent

* Introduction

	Kas-Sipua interface implementation oriented to embedded applications.See more in KAS-SIPUA interface. 
	
* Quick start
	
	* UaFactory is used for create User Agent. It has a static method witch return an instance of UserAgent with
	specified parameter.
	
	* UaFactory must be initialized with a MediaSession.
	
		* MediaSession. This component from kc-mscontrol library manages media resources attending each application needed.
		In Kurento, mscontrol library is available for android environment.
	
+---------------------
	UaFactory.setMediaSession(MediaSessionIntance);
+--------------------- 

	* A SipConfig is passed to UserFactory for create an instance of  SipUserAgent with following parameter:
		
		*	LocalAddress
		
		*	LocalPort
		
		*   ProxyAddress 
		
		*	ProxyPort
		
	
	Example
	
+---------------------
		SipConfig config = new SipConfig();
		config.setProxyAddress("127.0.0.1");
		config.setProxyPort("5070");
		config.setLocalAddress("127.0.0.1");
		config.setLocalPort("5060");
		
		UaFactory.getInstance(config);
+---------------------

* Structure for SipDialogs: Transactions

	Kas-sipua-impl is structure on two kind of transaction for manage sip messages. They  are divided in two group CTransactions for
	outgoing request and STransaction for incoming request.

*-------------*--------------*	
| <<CTransactions>>| <<STransactions>> 
*-------------*--------------*
|CRegister    |SRegister
*-------------*--------------*
|CInvite      | Sinvite
*-------------*--------------*
|CBye         | SBye
*-------------*--------------*
|CCancel      | SCancel
*-------------*--------------*
|COptions     |---
*-------------*--------------*
|---          |SAck
*-------------*--------------*

	Note: Opensips must be configure for pass test see {{{./testhelp.html}test-help}}.
		
		